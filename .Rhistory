}
# Execute the analysis for balance and outcome variables
balance_results <- perform_analysis(balance_vars, df)
# Install packages
packages <- c("tidyverse", "broom", "dplyr", "haven", "lmtest", "lfe");for(pack in packages){
if(!require(pack, character.only = TRUE)){
install.packages(pack, dependencies = TRUE)
require(pack, character.only = TRUE)
}
# Clean up the workspace
rm(pack)
}
# Install packages
packages <- c("tidyverse", "broom", "dplyr", "haven", "lmtest", "lfe");for(pack in packages){
if(!require(pack, character.only = TRUE)){
install.packages(pack, dependencies = TRUE)
require(pack, character.only = TRUE)
}
# Clean up the workspace
rm(pack)
}
# Load the stata file
df <- read_dta("Session 3.3 RCT/Codes/ipa-neda_rctexercise.dta")
# Balance and Outcome variables
balance_vars <- c("age", "hhmemnum", "educ", "lit", "hunger6m")
outcome_vars <- c("life_sat", "future_life_sat", "hhincome30", "lh_asset", "loans")
# Function to perform detailed summary and regression
perform_analysis <- function(vars, data) {
results <- list()
for (var in vars) {
cat("\nAnalysis Results for:", var, "\n")
# Summary statistics
print(summary(data[[var]]))
# Absorption regression including intercept
model <- felm(as.formula(paste(var, "~ 1 + treatment | community")), data = data)
print(summary(model))
# Extract the intercept
icpt <- getfe(model, ef='zm2')
cons <- c(icpt["icpt.1",],rep(NA, 3))
# Print model summary
summary_model <- rbind(summary(model)$coefficients,cons)
print(summary_model)
results[[var]] <- list(model_summary = tidy(model), with_cons = summary_model)
}
return(results)
}
# Execute the analysis for balance and outcome variables
balance_results <- perform_analysis(balance_vars, df)
# Function to perform detailed summary and regression
perform_analysis <- function(vars, data) {
results <- list()
for (var in vars) {
cat("\nAnalysis Results for:", var, "\n")
# Summary statistics
print(summary(data[[var]]))
# Absorption regression including intercept
model <- felm(as.formula(paste(var, "~ 1 + treatment | community")), data = data)
print(summary(model))
# Extract the intercept
icpt <- getfe(model, ef='zm2')
cons <- c(icpt["icpt.1",1],rep(NA, 3))
# Print model summary
summary_model <- rbind(summary(model)$coefficients,cons)
print(summary_model)
results[[var]] <- list(model_summary = tidy(model), with_cons = summary_model)
}
return(results)
}
# Execute the analysis for balance and outcome variables
balance_results <- perform_analysis(balance_vars, df)
# Function to perform detailed summary and regression
perform_analysis <- function(vars, data) {
results <- list()
for (var in vars) {
cat("\nAnalysis Results for:", var, "\n")
# Summary statistics
print(summary(data[[var]]))
# Absorption regression including intercept
model <- felm(as.formula(paste(var, "~ 1 + treatment | community")), data = data)
print(summary(model))
# Extract the intercept
icpt <- getfe(model, ef='zm2')
cons <- c(icpt["icpt.1",1],rep(NA, 3))
# Print model summary with constant
summary_model <- rbind(summary(model)$coefficients,cons)
cat("\n Computing for the constant:\n", summary_model)
results[[var]] <- list(model_summary = tidy(model), with_cons = summary_model)
}
return(results)
}
# Execute the analysis for balance and outcome variables
balance_results <- perform_analysis(balance_vars, df)
# Install packages
packages <- c("tidyverse", "broom", "dplyr", "haven", "lmtest", "lfe");for(pack in packages){
if(!require(pack, character.only = TRUE)){
install.packages(pack, dependencies = TRUE)
require(pack, character.only = TRUE)
}
# Clean up the workspace
rm(pack)
}
# Load the stata file
df <- read_dta("Session 3.3 RCT/Codes/ipa-neda_rctexercise.dta")
# Balance and Outcome variables
balance_vars <- c("age", "hhmemnum", "educ", "lit", "hunger6m")
outcome_vars <- c("life_sat", "future_life_sat", "hhincome30", "lh_asset", "loans")
# Function to perform detailed summary and regression
areg <- function(vars, data) {
results <- list()
for (var in vars) {
cat("\nAnalysis Results for:", var, "\n")
# Summary statistics
print(summary(data[[var]]))
# Absorption regression including intercept
model <- felm(as.formula(paste(var, "~ 1 + treatment | community")), data = data)
print(summary(model))
# Extract the intercept
icpt <- getfe(model, ef='zm2')
cons <- c(icpt["icpt.1",1],rep(NA, 3))
# Print model summary with constant
summary_model <- rbind(summary(model)$coefficients,cons)
cat("\n Computing for the constant:\n")
print(summary_model)
results[[var]] <- list(model_summary = tidy(model), with_cons = summary_model)
}
return(results)
}
# Execute the analysis for balance and outcome variables
balance_results <- areg(balance_vars, df)
outcome_results <- areg(outcome_vars, df)
# Absorption regression including intercept
model <- felm(as.formula(paste(var, "~ treatment | community")), data = df)
df
# Absorption regression including intercept
model <- felm(as.formula(paste("age", "~ treatment | community")), data = df)
print(summary(model))
# Extract the intercept
icpt <- getfe(model, ef='zm2', se = TRUE)
icpt
# Absorption regression including intercept
model <- felm(as.formula(paste("age", "~ treatment | community")), data = df)
print(summary(model))
# Extract the intercept
icpt <- getfe(model, ef='zm', se = TRUE)
icpt
# Absorption regression including intercept
model <- felm(as.formula(paste("age", "~ treatment | community")), data = df)
print(summary(model))
# Extract the intercept
icpt <- getfe(model, ef='zm1', se = TRUE)
# Absorption regression including intercept
model <- felm(as.formula(paste("age", "~ treatment | community")), data = df)
print(summary(model))
# Extract the intercept
icpt <- getfe(model, ef='zm', se = TRUE)
icpt
# Absorption regression including intercept
model <- felm(as.formula(paste("age", "~ treatment | community")), data = df)
print(summary(model))
# Extract the intercept
icpt <- getfe(model, ef='zm2', robust = TRUE, se = TRUE)
icpt
t_critical <- qt(0.975, 967)  # 97.5th percentile for two-tailed test
lower_bound <- intercept_estimate - t_critical * se
t_critical <- qt(0.975, 967)  # 97.5th percentile for two-tailed test
lower_bound <- 44.6143 - t_critical * 0.5024865
upper_bound <- 44.6143 + t_critical * 0.5024865
confidence_interval <- c(lower_bound, upper_bound)
confidence_interval
# Install packages
packages <- c("tidyverse", "broom", "dplyr", "haven", "lmtest", "lfe");for(pack in packages){
if(!require(pack, character.only = TRUE)){
install.packages(pack, dependencies = TRUE)
require(pack, character.only = TRUE)
}
# Clean up the workspace
rm(pack)
}
# Load the stata file
df <- read_dta("Session 3.3 RCT/Codes/ipa-neda_rctexercise.dta")
# Balance and Outcome variables
balance_vars <- c("age", "hhmemnum", "educ", "lit", "hunger6m")
outcome_vars <- c("life_sat", "future_life_sat", "hhincome30", "lh_asset", "loans")
# Function to perform detailed summary and regression
areg <- function(vars, data) {
results <- list()
for (var in vars) {
cat("\nAnalysis Results for:", var, "\n")
# Summary statistics
print(summary(data[[var]]))
# Absorption regression including intercept
model <- felm(as.formula(paste(var, "~ treatment | community")), data = data)
print(summary(model))
# Extract the intercept
icpt <- getfe(model, ef='zm2')
cons <- c(icpt["icpt.1",1],rep(NA, 3))
# Print model summary with constant
summary_model <- rbind(summary(model)$coefficients,cons)
cat("\n Computing for the constant:\n")
print(summary_model)
results[[var]] <- list(model_summary = tidy(model), with_cons = summary_model)
}
return(results)
}
# Execute the analysis for balance and outcome variables
balance_results <- areg(balance_vars, df)
# Absorption regression including intercept
model <- felm(as.formula(paste("age", "~ treatment | community")), data = df)
print(summary(model))
# Extract the intercept
icpt <- getfe(model, ef='zm2', se =TRUE, robust = TRUE)
icpt
# Absorption regression including intercept
model <- felm(as.formula(paste("age", "~ treatment | community")), data = df)
print(summary(model))
# Extract the intercept
icpt <- getfe(model, ef='zm2', se =TRUE)
icpt
# Install packages
packages <- c("tidyverse", "broom", "dplyr", "haven", "lmtest", "lfe");for(pack in packages){
if(!require(pack, character.only = TRUE)){
install.packages(pack, dependencies = TRUE)
require(pack, character.only = TRUE)
}
# Clean up the workspace
rm(pack)
}
# Load the stata file
df <- read_dta("Session 3.3 RCT/Codes/ipa-neda_rctexercise.dta")
# Balance and Outcome variables
balance_vars <- c("age", "hhmemnum", "educ", "lit", "hunger6m")
outcome_vars <- c("life_sat", "future_life_sat", "hhincome30", "lh_asset", "loans")
# Function to perform detailed summary and regression
areg <- function(vars, data) {
results <- list()
for (var in vars) {
cat("\nAnalysis Results for:", var, "\n")
# Summary statistics
print(summary(data[[var]]))
# Absorption regression including intercept
model <- felm(as.formula(paste(var, "~ treatment | community")), data = data)
print(summary(model))
# Extract the intercept
icpt <- getfe(model, ef='zm2')
cons <- c(icpt["icpt.1",1,4],rep(NA, 2))
# Print model summary with constant
summary_model <- rbind(summary(model)$coefficients,cons)
cat("\n Computing for the constant:\n")
print(summary_model)
results[[var]] <- list(model_summary = tidy(model), with_cons = summary_model)
}
return(results)
}
# Execute the analysis for balance and outcome variables
balance_results <- areg(balance_vars, df)
# Absorption regression including intercept
model <- felm(as.formula(paste('age', "~ treatment | community")), data = df)
print(summary(model))
# Extract the intercept
icpt <- getfe(model, ef='zm2')
cons <- c(icpt["icpt.1",1,4],rep(NA, 2))
# Print model summary with constant
summary_model <- rbind(summary(model)$coefficients,cons)
cat("\n Computing for the constant:\n")
print(summary_model)
# Function to perform detailed summary and regression
areg <- function(vars, data) {
results <- list()
for (var in vars) {
cat("\nAnalysis Results for:", var, "\n")
# Summary statistics
print(summary(data[[var]]))
# Absorption regression including intercept
model <- felm(as.formula(paste(var, "~ treatment | community")), data = data)
print(summary(model))
# Extract the intercept
icpt <- getfe(model, ef='zm2')
cons <- c(icpt["icpt.1",c(1,4)],rep(NA, 2))
# Print model summary with constant
summary_model <- rbind(summary(model)$coefficients,cons)
cat("\n Computing for the constant:\n")
print(summary_model)
results[[var]] <- list(model_summary = tidy(model), with_cons = summary_model)
}
return(results)
}
# Execute the analysis for balance and outcome variables
balance_results <- areg(balance_vars, df)
cons <- c(icpt["icpt.1", c("effect", "se")],rep(NA, 2))
# Function to perform detailed summary and regression
areg <- function(vars, data) {
results <- list()
for (var in vars) {
cat("\nAnalysis Results for:", var, "\n")
# Summary statistics
print(summary(data[[var]]))
# Absorption regression including intercept
model <- felm(as.formula(paste(var, "~ treatment | community")), data = data)
print(summary(model))
# Extract the intercept
icpt <- getfe(model, ef='zm2')
cons <- c(icpt["icpt.1", c("effect", "se")],rep(NA, 2))
# Print model summary with constant
summary_model <- rbind(summary(model)$coefficients,cons)
cat("\n Computing for the constant:\n")
print(summary_model)
results[[var]] <- list(model_summary = tidy(model), with_cons = summary_model)
}
return(results)
}
# Execute the analysis for balance and outcome variables
balance_results <- areg(balance_vars, df)
# Absorption regression including intercept
model <- felm(as.formula(paste('age', "~ treatment | community")), data = df)
print(summary(model))
# Extract the intercept
icpt <- getfe(model, ef='zm2')
cons <- c(icpt["icpt.1", c("effect", "se")],rep(NA, 2))
icpt["icpt.1", c("effect", "se")]
icpt
icpt[,"effect"]
icpt[,c("effect", "se")]
# Function to perform detailed summary and regression
areg <- function(vars, data) {
results <- list()
for (var in vars) {
cat("\nAnalysis Results for:", var, "\n")
# Summary statistics
print(summary(data[[var]]))
# Absorption regression including intercept
model <- felm(as.formula(paste(var, "~ treatment | community")), data = data)
print(summary(model))
# Extract the intercept
icpt <- getfe(model, ef='zm2', se = TRUE)
cons <- c(icpt["icpt.1", c("effect", "se")],rep(NA, 2))
# Print model summary with constant
summary_model <- rbind(summary(model)$coefficients,cons)
cat("\n Computing for the constant:\n")
print(summary_model)
results[[var]] <- list(model_summary = tidy(model), with_cons = summary_model)
}
return(results)
}
# Execute the analysis for balance and outcome variables
balance_results <- areg(balance_vars, df)
# Load the stata file
df <- read_dta("Session 3.3 RCT/Codes/ipa-neda_rctexercise.dta")
# Balance and Outcome variables
balance_vars <- c("age", "hhmemnum", "educ", "lit", "hunger6m")
outcome_vars <- c("life_sat", "future_life_sat", "hhincome30", "lh_asset", "loans")
# Function to perform detailed summary and regression
areg <- function(vars, data) {
results <- list()
for (var in vars) {
cat("\nAnalysis Results for:", var, "\n")
# Summary statistics
print(summary(data[[var]]))
# Absorption regression including intercept
model <- felm(as.formula(paste(var, "~ treatment | community")), data = data)
print(summary(model))
# Extract the intercept
icpt <- getfe(model, ef='zm2', se = TRUE)
cons <- c(icpt["icpt.1", c("effect", "se")],rep(NA, 2))
# Print model summary with constant
summary_model <- rbind(summary(model)$coefficients,cons)
cat("\n Computing for the constant:\n")
print(summary_model)
results[[var]] <- list(model_summary = tidy(model), with_cons = summary_model)
}
return(results)
}
# Execute the analysis for balance and outcome variables
balance_results <- areg(balance_vars, df)
# Absorption regression including intercept
model <- felm(as.formula(paste('age', "~ treatment | community")), data = df)
print(summary(model))
# Extract the intercept
icpt <- getfe(model, ef='zm2', se = TRUE)
cons <- c(icpt["icpt.1", c("effect", "se")],rep(NA, 2))
# Print model summary with constant
summary_model <- rbind(summary(model)$coefficients,cons)
cat("\n Computing for the constant:\n")
print(summary_model)
44.66143/0.5024865
model$df
2 * pt(-abs(88.88), df = 967)
# Function to perform detailed summary and regression
areg <- function(vars, data) {
results <- list()
for (var in vars) {
cat("\nAnalysis Results for:", var, "\n")
# Summary statistics
print(summary(data[[var]]))
# Absorption regression including intercept
model <- felm(as.formula(paste(var, "~ treatment | community")), data = data)
print(summary(model))
# Extract the intercept
icpt <- getfe(model, ef='zm2', se = TRUE)
icpt$t_value <- icpt$effect/icpt$se
icpt$p_value <- 2 * pt(-abs(icpt$t_value), df = model$df)
cons <- c(icpt["icpt.1", c("effect", "se", "t_value", "p_value")])
# Print model summary with constant
summary_model <- rbind(summary(model)$coefficients,cons)
cat("\n Computing for the constant:\n")
print(summary_model)
results[[var]] <- list(model_summary = tidy(model), with_cons = summary_model)
}
return(results)
}
# Execute the analysis for balance and outcome variables
balance_results <- areg(balance_vars, df)
# Install packages
packages <- c("tidyverse", "broom", "dplyr", "haven", "lmtest", "lfe");for(pack in packages){
if(!require(pack, character.only = TRUE)){
install.packages(pack, dependencies = TRUE)
require(pack, character.only = TRUE)
}
# Clean up the workspace
rm(pack)
}
# Load the stata file
df <- read_dta("Session 3.3 RCT/Codes/ipa-neda_rctexercise.dta")
# Balance and Outcome variables
balance_vars <- c("age", "hhmemnum", "educ", "lit", "hunger6m")
outcome_vars <- c("life_sat", "future_life_sat", "hhincome30", "lh_asset", "loans")
# Function to perform detailed summary and regression
areg <- function(vars, data) {
results <- list()
for (var in vars) {
cat("\nAnalysis Results for:", var, "\n")
# Summary statistics
print(summary(data[[var]]))
# Absorption regression including intercept
model <- felm(as.formula(paste(var, "~ treatment | community")), data = data)
print(summary(model))
# Extract the intercept
icpt <- getfe(model, ef='zm2', se = TRUE)
icpt$t_value <- icpt$effect/icpt$se
icpt$p_value <- 2 * pt(-abs(icpt$t_value), df = model$df)
cons <- c(icpt["icpt.1", c("effect", "se", "t_value", "p_value")])
# Print model summary with constant
summary_model <- rbind(summary(model)$coefficients,cons)
cat("\n Computing for the constant:\n")
print(summary_model)
results[[var]] <- list(model_summary = tidy(model), with_cons = summary_model)
}
return(results)
}
# Execute the analysis for balance and outcome variables
balance_results <- areg(balance_vars, df)
# Absorption regression including intercept
model <- felm(as.formula(paste('age', "~ treatment | community")), data = df)
print(summary(model))
# Extract the intercept
icpt <- getfe(model, ef='zm2', se = TRUE)
icpt$t_value <- icpt$effect/icpt$se
icpt$p_value <- 2 * pt(-abs(icpt$t_value), df = model$df)
cons <- c(icpt["icpt.1", c("effect", "se", "t_value", "p_value")])
cons
# Absorption regression including intercept
model <- felm(as.formula(paste('age', "~ treatment | community")), data = df)
print(summary(model))
# Extract the intercept
icpt <- getfe(model, ef='zm2', robust = TRUE)
icpt$t_value <- icpt$effect/icpt$robust
# Absorption regression including intercept
model <- felm(as.formula(paste('age', "~ treatment | community")), data = df)
print(summary(model))
# Extract the intercept
icpt <- getfe(model, ef='zm2', robust = TRUE)
icpt
# Absorption regression including intercept
model <- felm(as.formula(paste('age', "~ treatment | community")), data = df)
print(summary(model))
# Extract the intercept
icpt <- getfe(model, ef='zm2', se = TRUE, robust = TRUE)
icpt$t_value <- icpt$effect/icpt$robust
icpt$p_value <- 2 * pt(-abs(icpt$t_value), df = model$df)
cons <- c(icpt["icpt.1", c("effect", "robust", "t_value", "p_value")])
# Absorption regression including intercept
model <- felm(as.formula(paste('age', "~ treatment | community")), data = df)
print(summary(model))
# Extract the intercept
icpt <- getfe(model, ef='zm2', se = TRUE, robust = TRUE)
icpt
# Absorption regression including intercept
model <- felm(as.formula(paste('age', "~ treatment | community")), data = df)
print(summary(model))
# Extract the intercept
icpt <- getfe(model, ef='zm2', se = TRUE, robust = TRUE)
icpt$t_value <- icpt$effect/icpt$robustse
icpt$p_value <- 2 * pt(-abs(icpt$t_value), df = model$df)
cons <- c(icpt["icpt.1", c("effect", "robustse", "t_value", "p_value")])
cons
# Absorption regression including intercept
model <- felm(as.formula(paste('age', "~ treatment | community")), data = df)
print(summary(model))
# Extract the intercept
icpt <- getfe(model, ef='zm2', se = TRUE)
icpt$t_value <- icpt$effect/icpt$se
icpt$p_value <- 2 * pt(-abs(icpt$t_value), df = model$df)
cons <- c(icpt["icpt.1", c("effect", "se", "t_value", "p_value")])
cons
# Absorption regression including intercept
model <- felm(as.formula(paste('age', "~ treatment | community")), data = df)
print(summary(model))
# Extract the intercept
icpt <- getfe(model, ef='zm2', se = TRUE)
icpt$t_value <- icpt$effect/icpt$se
icpt$p_value <- 2 * pt(-abs(icpt$t_value), df = model$df)
cons <- c(icpt["icpt.1", c("effect", "se", "t_value", "p_value")])
cons
