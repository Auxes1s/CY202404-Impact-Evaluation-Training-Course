return(results)
}
# 3. REGRESSIONS
# Balance check
balance_results <- perform_analysis(balance_vars, df)
# Install packages
packages <- c("tidyverse", "broom", "dplyr", "haven", "knitr", "lfe"); for(pack in packages){
if(!require(pack, character.only = TRUE)){
install.packages(pack, dependencies = TRUE)
require(pack, character.only = TRUE)
}
rm(pack)
}
# Load the stata file
df <- read_dta("Session 3.3 RCT/Codes/ipa-neda_rctexercise.dta")
# Balance variables
balance_vars <- c("age", "hhmemnum", "educ", "lit", "hunger6m")
# Outcome variables
outcome_vars <- c("life_sat", "future_life_sat", "hhincome30", "lh_asset", "loans")
library(knitr)
library(knitr)
perform_analysis <- function(vars, data) {
results <- list()
for (var in vars) {
cat("\nAnalysis Results for:", var, "\n")
# Summary statistics
print(summary(data[[var]]))
# Absorption regression using felm() from lfe package
model <- felm(as.formula(paste(var, "~ 1 + treatment | community")), data = data)
# Extract the intercept
icpt <- getfe(model, ef='zm2')
# Print model summary
print(summary(model))
# Performing hypothesis test on treatment
hypothesis_test <- coeftest(model)
print(hypothesis_test)
# Convert model summary to data frame
model_summary_df <- tidy(model)
# Construct a data frame for the intercept estimate with the same columns as model_summary_df
intercept_df <- data.frame(matrix(NA, nrow = 1, ncol = ncol(model_summary_df)))
names(intercept_df) <- names(model_summary_df)
intercept_df$Parameter <- "Intercept"
intercept_df$Estimate <- icpt
# Combine model summary and intercept estimate
combined_df <- rbind(model_summary_df, intercept_df)
# Present the combined results in a clean table
results[[var]] <- list(
model_table = kable(combined_df, digits = 3)
)
}
return(results)
}
# 3. REGRESSIONS
# Balance check
balance_results <- perform_analysis(balance_vars, df)
perform_analysis <- function(vars, data) {
results <- list()
for (var in vars) {
cat("\nAnalysis Results for:", var, "\n")
# Summary statistics
print(summary(data[[var]]))
# Absorption regression using felm() from lfe package
model <- felm(as.formula(paste(var, "~ 1 + treatment | community")), data = data)
# Extract the intercept
icpt <- getfe(model, ef='zm2')
# Print model summary
print(summary(model))
# Performing hypothesis test on treatment
hypothesis_test <- coeftest(model)
print(hypothesis_test)
intercept_df$Estimate <- icpt[["Intercept"]]
# Convert model summary to data frame
model_summary_df <- tidy(model)
# Construct a data frame for the intercept estimate with the same columns as model_summary_df
intercept_df <- data.frame(matrix(NA, nrow = 1, ncol = ncol(model_summary_df)))
names(intercept_df) <- names(model_summary_df)
intercept_df$Parameter <- "Intercept"
intercept_df$Estimate <- icpt[["Intercept"]]
# Combine model summary and intercept estimate
combined_df <- rbind(model_summary_df, intercept_df)
# Present the combined results in a clean table
results[[var]] <- list(
model_table = kable(combined_df, digits = 3)
)
}
return(results)
}
# 3. REGRESSIONS
# Balance check
balance_results <- perform_analysis(balance_vars, df)
# Install packages
packages <- c("tidyverse", "broom", "dplyr", "haven", "knitr", "lfe"); for(pack in packages){
if(!require(pack, character.only = TRUE)){
install.packages(pack, dependencies = TRUE)
require(pack, character.only = TRUE)
}
rm(pack)
}
# Load the stata file
df <- read_dta("Session 3.3 RCT/Codes/ipa-neda_rctexercise.dta")
# Balance variables
balance_vars <- c("age", "hhmemnum", "educ", "lit", "hunger6m")
# Outcome variables
outcome_vars <- c("life_sat", "future_life_sat", "hhincome30", "lh_asset", "loans")
perform_analysis <- function(vars, data) {
results <- list()
for (var in vars) {
cat("\nAnalysis Results for:", var, "\n")
# Summary statistics
print(summary(data[[var]]))
# Absorption regression using felm() from lfe package
model <- felm(as.formula(paste(var, "~ 1 + treatment | community")), data = data)
# Extract the intercept
icpt <- getfe(model, ef='zm2')
# Print model summary
print(summary(model))
# Performing hypothesis test on treatment
hypothesis_test <- coeftest(model)
print(hypothesis_test)
intercept_df$Estimate <- icpt[["Intercept"]]
# Convert model summary to data frame
model_summary_df <- tidy(model)
# Construct a data frame for the intercept estimate with the same columns as model_summary_df
intercept_df <- data.frame(matrix(NA, nrow = 1, ncol = ncol(model_summary_df)))
names(intercept_df) <- names(model_summary_df)
intercept_df$Parameter <- "Intercept"
intercept_df$Estimate <- icpt[["Intercept"]]
# Combine model summary and intercept estimate
combined_df <- rbind(model_summary_df, intercept_df)
# Present the combined results in a clean table
results[[var]] <- list(
model_table = kable(combined_df, digits = 3)
)
}
return(results)
}
# 3. REGRESSIONS
# Balance check
balance_results <- perform_analysis(balance_vars, df)
# Install packages
packages <- c("tidyverse", "broom", "dplyr", "haven", "knitr", "lfe"); for(pack in packages){
if(!require(pack, character.only = TRUE)){
install.packages(pack, dependencies = TRUE)
require(pack, character.only = TRUE)
}
rm(pack)
}
# Load the stata file
df <- read_dta("Session 3.3 RCT/Codes/ipa-neda_rctexercise.dta")
# Balance variables
balance_vars <- c("age", "hhmemnum", "educ", "lit", "hunger6m")
# Outcome variables
outcome_vars <- c("life_sat", "future_life_sat", "hhincome30", "lh_asset", "loans")
perform_analysis <- function(vars, data) {
results <- list()
for (var in vars) {
cat("\nAnalysis Results for:", var, "\n")
# Summary statistics
print(summary(data[[var]]))
# Absorption regression using felm() from lfe package
model <- felm(as.formula(paste(var, "~ 1 + treatment | community")), data = data)
# Extract the intercept
icpt <- getfe(model, ef='zm2')
# Print model summary
print(summary(model))
# Performing hypothesis test on treatment
hypothesis_test <- coeftest(model)
print(hypothesis_test)
# Convert model summary to data frame
model_summary_df <- tidy(model)
# Construct a data frame for the intercept estimate with the same columns as model_summary_df
intercept_df <- data.frame(matrix(NA, nrow = 1, ncol = ncol(model_summary_df)))
names(intercept_df) <- names(model_summary_df)
intercept_df$Parameter <- "Intercept"
intercept_df$Estimate <- icpt[["Intercept"]] # Assign value after creating intercept_df
# Combine model summary and intercept estimate
combined_df <- rbind(model_summary_df, intercept_df)
# Present the combined results in a clean table
results[[var]] <- list(
model_table = kable(combined_df, digits = 3)
)
}
return(results)
}
# 3. REGRESSIONS
# Balance check
balance_results <- perform_analysis(balance_vars, df)
perform_analysis <- function(vars, data) {
results <- list()
for (var in vars) {
cat("\nAnalysis Results for:", var, "\n")
# Summary statistics
print(summary(data[[var]]))
# Absorption regression using felm() from lfe package
model <- felm(as.formula(paste(var, "~ 1 + treatment | community")), data = data)
# Extract the intercept
icpt <- getfe(model, ef='zm2')
# Print model summary
print(summary(model))
# Performing hypothesis test on treatment
hypothesis_test <- coeftest(model)
print(hypothesis_test)
# Convert model summary to data frame
model_summary_df <- tidy(model)
# Construct a data frame for the intercept estimate
intercept_df <- data.frame(term = "Intercept",
estimate = icpt[["Intercept"]],
std.error = NA,
statistic = NA,
p.value = NA)
# Ensure matching columns and order
intercept_df <- intercept_df[, names(model_summary_df)]
# Combine model summary and intercept estimate
combined_df <- rbind(model_summary_df, intercept_df)
# Present the combined results in a clean table
results[[var]] <- list(
model_table = kable(combined_df, digits = 3)
)
}
return(results)
}
# 3. REGRESSIONS
# Balance check
balance_results <- perform_analysis(balance_vars, df)
perform_analysis <- function(vars, data) {
results <- list()
for (var in vars) {
cat("\nAnalysis Results for:", var, "\n")
# Summary statistics
print(summary(data[[var]]))
# Absorption regression using felm() from lfe package
model <- felm(as.formula(paste(var, "~ 1 + treatment | community")), data = data)
# Extract the intercept
icpt <- getfe(model, ef='zm2')
print(icpt)  # Check if intercept is extracted
# Print model summary
print(summary(model))
# Performing hypothesis test on treatment
hypothesis_test <- coeftest(model)
print(hypothesis_test)
# Convert model summary to data frame
model_summary_df <- tidy(model)
# Conditional data frame creation for intercept
if(length(icpt) > 0) {
intercept_df <- data.frame(term = "Intercept",
estimate = icpt[["Intercept"]],
std.error = NA,
statistic = NA,
p.value = NA)
# Ensure matching columns and order
intercept_df <- intercept_df[, names(model_summary_df)]
# Combine model summary and intercept estimate
combined_df <- rbind(model_summary_df, intercept_df)
} else {
warning("Intercept not found in model. Skipping intercept row.")
combined_df <- model_summary_df  # Use only model summary
}
# Present the combined results in a clean table
results[[var]] <- list(
model_table = kable(combined_df, digits = 3)
)
}
return(results)
}
# 3. REGRESSIONS
# Balance check
balance_results <- perform_analysis(balance_vars, df)
# Load the stata file
df <- read_dta("Session 3.3 RCT/Codes/ipa-neda_rctexercise.dta")
# Balance variables
balance_vars <- c("age", "hhmemnum", "educ", "lit", "hunger6m")
# Outcome variables
outcome_vars <- c("life_sat", "future_life_sat", "hhincome30", "lh_asset", "loans")
model <- felm(as.formula(paste("age", "~ 1 + treatment | community")), data = data)
model <- felm(as.formula(paste("age", "~ 1 + treatment | community")), data = df)
summary(model)
icpt <- getfe(model, ef = "zm2")
print(icpt)
print(icpt)["icpt.1",]
icpt["icpt.1",]
model <- felm(as.formula(paste("age", "~ treatment | community")), data = df)
summary(model)
icpt <- getfe(model, ef = "zm2")
icpt
summary(model)
model$beta
model$coefficients
print(summary(model))
model$fe
model$se
summary(model)$
asd
container <- summary(model)
container$coefficients
cons <- icpt["icpt.1",]
cons
cons <- icpt["icpt.1",1]
cons
container <- summary(model)$coefficients
container
rbind(cons, container)
rbind(container, cons)
cons <- c(icpt["icpt.1",],rep(NA, 3))
summary_model <- rbind(summary(model)$coefficients,cons)
summary(model)$coefficients
cons
c(icpt["icpt.1",],rep(NA, 3))
cons <- c(icpt["icpt.1",1],rep(NA, 3))
cons
rbind(summary(model)$coefficients,cons)
# Performing hypothesis test on treatment
hypothesis_test <- coeftest(model)
print(hypothesis_test)
# Install packages
packages <- c("tidyverse", "broom", "dplyr", "haven", "lmtest", "lfe");for(pack in packages){
if(!require(pack, character.only = TRUE)){
install.packages(pack, dependencies = TRUE)
require(pack, character.only = TRUE)
}
# Clean up the workspace
rm(pack)
}
# Load the stata file
df <- read_dta("Session 3.3 RCT/Codes/ipa-neda_rctexercise.dta")
# Balance and Outcome variables
balance_vars <- c("age", "hhmemnum", "educ", "lit", "hunger6m")
outcome_vars <- c("life_sat", "future_life_sat", "hhincome30", "lh_asset", "loans")
# Function to perform detailed summary and regression
perform_analysis <- function(vars, data) {
results <- list()
for (var in vars) {
cat("\nAnalysis Results for:", var, "\n")
# Summary statistics
print(summary(data[[var]]))
# Absorption regression including intercept
model <- felm(as.formula(paste(var, "~ 1 + treatment | community")), data = data)
print(summary(model))
# Hypothesis test
hypothesis_test <- coeftest(model)
print(hypothesis_test)
results[[var]] <- list(model_summary = tidy(model), hypothesis_test = hypothesis_test)
}
return(results)
}
# Execute the analysis for balance and outcome variables
balance_results <- perform_analysis(balance_vars, df)
# Install packages
packages <- c("tidyverse", "broom", "dplyr", "haven", "lmtest", "lfe");for(pack in packages){
if(!require(pack, character.only = TRUE)){
install.packages(pack, dependencies = TRUE)
require(pack, character.only = TRUE)
}
# Clean up the workspace
rm(pack)
}
# Install packages
packages <- c("tidyverse", "broom", "dplyr", "haven", "lmtest", "lfe");for(pack in packages){
if(!require(pack, character.only = TRUE)){
install.packages(pack, dependencies = TRUE)
require(pack, character.only = TRUE)
}
# Clean up the workspace
rm(pack)
}
# Load the stata file
df <- read_dta("Session 3.3 RCT/Codes/ipa-neda_rctexercise.dta")
# Balance and Outcome variables
balance_vars <- c("age", "hhmemnum", "educ", "lit", "hunger6m")
outcome_vars <- c("life_sat", "future_life_sat", "hhincome30", "lh_asset", "loans")
# Function to perform detailed summary and regression
perform_analysis <- function(vars, data) {
results <- list()
for (var in vars) {
cat("\nAnalysis Results for:", var, "\n")
# Summary statistics
print(summary(data[[var]]))
# Absorption regression including intercept
model <- felm(as.formula(paste(var, "~ 1 + treatment | community")), data = data)
print(summary(model))
# Extract the intercept
icpt <- getfe(model, ef='zm2')
cons <- c(icpt["icpt.1",],rep(NA, 3))
# Print model summary
summary_model <- rbind(summary(model)$coefficients,cons)
print(summary_model)
results[[var]] <- list(model_summary = tidy(model), with_cons = summary_model)
}
return(results)
}
# Execute the analysis for balance and outcome variables
balance_results <- perform_analysis(balance_vars, df)
# Function to perform detailed summary and regression
perform_analysis <- function(vars, data) {
results <- list()
for (var in vars) {
cat("\nAnalysis Results for:", var, "\n")
# Summary statistics
print(summary(data[[var]]))
# Absorption regression including intercept
model <- felm(as.formula(paste(var, "~ 1 + treatment | community")), data = data)
print(summary(model))
# Extract the intercept
icpt <- getfe(model, ef='zm2')
cons <- c(icpt["icpt.1",1],rep(NA, 3))
# Print model summary
summary_model <- rbind(summary(model)$coefficients,cons)
print(summary_model)
results[[var]] <- list(model_summary = tidy(model), with_cons = summary_model)
}
return(results)
}
# Execute the analysis for balance and outcome variables
balance_results <- perform_analysis(balance_vars, df)
# Function to perform detailed summary and regression
perform_analysis <- function(vars, data) {
results <- list()
for (var in vars) {
cat("\nAnalysis Results for:", var, "\n")
# Summary statistics
print(summary(data[[var]]))
# Absorption regression including intercept
model <- felm(as.formula(paste(var, "~ 1 + treatment | community")), data = data)
print(summary(model))
# Extract the intercept
icpt <- getfe(model, ef='zm2')
cons <- c(icpt["icpt.1",1],rep(NA, 3))
# Print model summary with constant
summary_model <- rbind(summary(model)$coefficients,cons)
cat("\n Computing for the constant:\n", summary_model)
results[[var]] <- list(model_summary = tidy(model), with_cons = summary_model)
}
return(results)
}
# Execute the analysis for balance and outcome variables
balance_results <- perform_analysis(balance_vars, df)
# Install packages
packages <- c("tidyverse", "broom", "dplyr", "haven", "lmtest", "lfe");for(pack in packages){
if(!require(pack, character.only = TRUE)){
install.packages(pack, dependencies = TRUE)
require(pack, character.only = TRUE)
}
# Clean up the workspace
rm(pack)
}
# Load the stata file
df <- read_dta("Session 3.3 RCT/Codes/ipa-neda_rctexercise.dta")
# Balance and Outcome variables
balance_vars <- c("age", "hhmemnum", "educ", "lit", "hunger6m")
outcome_vars <- c("life_sat", "future_life_sat", "hhincome30", "lh_asset", "loans")
# Function to perform detailed summary and regression
areg <- function(vars, data) {
results <- list()
for (var in vars) {
cat("\nAnalysis Results for:", var, "\n")
# Summary statistics
print(summary(data[[var]]))
# Absorption regression including intercept
model <- felm(as.formula(paste(var, "~ 1 + treatment | community")), data = data)
print(summary(model))
# Extract the intercept
icpt <- getfe(model, ef='zm2')
cons <- c(icpt["icpt.1",1],rep(NA, 3))
# Print model summary with constant
summary_model <- rbind(summary(model)$coefficients,cons)
cat("\n Computing for the constant:\n")
print(summary_model)
results[[var]] <- list(model_summary = tidy(model), with_cons = summary_model)
}
return(results)
}
# Execute the analysis for balance and outcome variables
balance_results <- areg(balance_vars, df)
outcome_results <- areg(outcome_vars, df)
# Absorption regression including intercept
model <- felm(as.formula(paste(var, "~ treatment | community")), data = df)
df
# Absorption regression including intercept
model <- felm(as.formula(paste("age", "~ treatment | community")), data = df)
print(summary(model))
# Extract the intercept
icpt <- getfe(model, ef='zm2', se = TRUE)
icpt
# Absorption regression including intercept
model <- felm(as.formula(paste("age", "~ treatment | community")), data = df)
print(summary(model))
# Extract the intercept
icpt <- getfe(model, ef='zm', se = TRUE)
icpt
# Absorption regression including intercept
model <- felm(as.formula(paste("age", "~ treatment | community")), data = df)
print(summary(model))
# Extract the intercept
icpt <- getfe(model, ef='zm1', se = TRUE)
# Absorption regression including intercept
model <- felm(as.formula(paste("age", "~ treatment | community")), data = df)
print(summary(model))
# Extract the intercept
icpt <- getfe(model, ef='zm', se = TRUE)
icpt
# Absorption regression including intercept
model <- felm(as.formula(paste("age", "~ treatment | community")), data = df)
print(summary(model))
# Extract the intercept
icpt <- getfe(model, ef='zm2', robust = TRUE, se = TRUE)
icpt
t_critical <- qt(0.975, 967)  # 97.5th percentile for two-tailed test
lower_bound <- intercept_estimate - t_critical * se
t_critical <- qt(0.975, 967)  # 97.5th percentile for two-tailed test
lower_bound <- 44.6143 - t_critical * 0.5024865
upper_bound <- 44.6143 + t_critical * 0.5024865
confidence_interval <- c(lower_bound, upper_bound)
confidence_interval
